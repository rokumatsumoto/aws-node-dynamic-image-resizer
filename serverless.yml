service:
  name: ${self:custom.serviceName}

plugins:
  - serverless-offline
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs10.x
  region: ${self:custom.region}
  profile: default

custom:
  serviceName: image-resizing
  stage: ${opt:stage, self:custom.defaultStage}
  bucket: boyutluseyler-staging
  region: eu-central-1
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
  defaultStage: dev
  stages:
    - ${opt:stage}
    - dev
    - integration
    - production
  serverless-offline:
    port: 4000

functions:
  resize:
    handler: src/handlers/resizer/index.handler
    events:
      - http:
          path: /{image+}
          method: get
    environment:
      # Provide your bucket name here
      BUCKET: ${self:custom.bucket}
      REGION: ${self:custom.region}
    # layers:
    #   - {Ref: ImageLibsLambdaLayer}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "s3:GetObject"
        Resource: "arn:aws:s3:::${self:custom.bucket}/*"
      - Effect: "Allow"
        Action:
          - "s3:PutObject"
        Resource: "arn:aws:s3:::${self:custom.bucket}/*"

package:
  exclude:
    - layer/**
    - node_modules/**
    - '!node_modules/babel-runtime/**'
    - '!node_modules/sharp/**'

# layers:
#   imageLibs:
#     path: layer
#     compatibleRuntimes:
#       - nodejs10.x
